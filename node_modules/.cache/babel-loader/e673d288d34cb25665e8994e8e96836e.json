{"ast":null,"code":"var _jsxFileName = \"/Users/fabehafatima/fabehafatima.github.io/src/components/Sections/Projects.js\";\nimport { useEffect } from \"react\";\nimport ProjectComponent from \"../ProjectComponent\";\nconst Projects = () => {\n  useEffect(() => {\n    const scrollAnimElements = document.querySelectorAll(\"[data-animate-on-scroll]\");\n    const observer = new IntersectionObserver(entries => {\n      for (const entry of entries) {\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          const targetElement = entry.target;\n          targetElement.classList.add(\"animate\");\n          observer.unobserve(targetElement);\n        }\n      }\n    }, {\n      threshold: 0.15\n    });\n    for (let i = 0; i < scrollAnimElements.length; i++) {\n      observer.observe(scrollAnimElements[i]);\n    }\n    return () => {\n      for (let i = 0; i < scrollAnimElements.length; i++) {\n        observer.unobserve(scrollAnimElements[i]);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"self-stretch bg-primary-black overflow-hidden flex flex-col items-start justify-start py-[60px] pr-[97px] pl-20 box-border max-w-full text-left text-29xl text-primary-white font-heading-h6-semibold lg:pt-[25px] lg:pb-[25px] lg:box-border mq825:py-5 mq825:pr-12 mq825:pl-10 mq825:box-border mq450:pr-5 mq450:box-border mq1425:pt-[39px] mq1425:pb-[39px] mq1425:box-border\",\n    \"data-scroll-to\": \"project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"self-stretch overflow-hidden flex flex-col items-start justify-start py-0 px-8 box-border gap-[20px] max-w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"self-stretch overflow-hidden flex flex-row items-center justify-center py-5 px-0 gap-[16px] [&.animate]:animate-[1s_ease_0s_1_normal_forwards_fade-in-top] opacity-[0] mq450:flex-wrap\",\n    \"data-animate-on-scroll\": true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"m-0 relative text-inherit tracking-[-0.02em] leading-[56px] font-normal font-inherit mq825:text-19xl mq825:leading-[45px] mq450:text-10xl mq450:leading-[34px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"My\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"m-0 relative text-inherit tracking-[-0.02em] leading-[56px] font-extrabold font-inherit mq825:text-19xl mq825:leading-[45px] mq450:text-10xl mq450:leading-[34px]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Projects\")), /*#__PURE__*/React.createElement(ProjectComponent, {\n    Image: \"/umate.jpg\",\n    Number: \"01\",\n    Title: \"UMate: Bumble for Roommates\",\n    ImageLink: \"https://github.com/fabihafatima/UMateFinder\",\n    Text1: \"Developed a roommate-finding application in Python with an interactive React frontend with a recommendation algorithm to enhance user compatibility utilized MongoDB for scalable data management and AWS S3 for cloud storage\",\n    Text2: \"With UMate, users can easily create a profile, set their preferences, and find potential roommates using an interactive interface similar to dating apps and top-notch recommendation model, UMate suggests the top matches based on compatibility factors like the duration of stay, lifestyle, budget, dietary preferences, and more.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProjectComponent, {\n    Image: \"/TravelPlanner.jpeg\",\n    Number: \"02\",\n    Title: \"Travel Planner\",\n    ImageLink: \"https://github.com/fabihafatima/travel-planner\",\n    Text1: \"Developed an AI-driven travel planner using Python, React, and Java Spring Boot to curate personalized itineraries, suggest destinations based on user moods, and generate packing checklists.\",\n    Text2: \"The platform leverages Llama-3.2-3B-Instruct for AI-powered suggestion generation, enhancing automation and customization in travel planning.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProjectComponent, {\n    Image: \"/fraudSpark.png\",\n    Number: \"03\",\n    Title: \"FraudSpark: Real-Time Fraud Detection System\",\n    ImageLink: \"https://github.com/fabihafatima/FraudSpark-Real-Time-Fraud-Detection-System-\",\n    Text1: \"Built a distributed fraud detection system with Random Forest Classifier, optimized for imbalanced datasets and leveraged Kafka for real-time data streaming and PySpark for scalable processing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProjectComponent, {\n    Image: \"/llm.png\",\n    Number: \"04\",\n    Title: \"LLMs to the Rescue \",\n    ImageLink: \"https://github.com/fabihafatima/llms-to-the-rescue\",\n    Text1: \"Addressed class imbalance in text classification by leveraging Large Language Model (Llama-3.2) for data augmentation through style transfer using Python and synthetically enriched underrepresented classes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ProjectComponent, {\n    Image: \"/spede.jpg\",\n    Number: \"05\",\n    Title: \"Spede: Detecting Emotions from Speech using Deep Learning\",\n    ImageLink: \"https://github.com/fabihafatima/Speech-Emotion-Detector-using-Deep-Learning\",\n    Text1: \"Spede is a Python-based application with a simple intuitive interface that utilizes machine learning and deep learning techniques to detect emotions in speech or songs from uploaded WAV files, identifying eight emotions: happy, sad, neutral, anger, disgust, calm, surprised, and fearful.\",\n    Text2: \"By implementing a fusion of CNN-Decision Tree algorithms we analyze and categorize emotional states from English speech, achieving an accuracy of 83.56%.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })));\n};\nexport default Projects;","map":{"version":3,"names":["useEffect","ProjectComponent","Projects","scrollAnimElements","document","querySelectorAll","observer","IntersectionObserver","entries","entry","isIntersecting","intersectionRatio","targetElement","target","classList","add","unobserve","threshold","i","length","observe","React","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Image","Number","Title","ImageLink","Text1","Text2"],"sources":["/Users/fabehafatima/fabehafatima.github.io/src/components/Sections/Projects.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport ProjectComponent from \"../ProjectComponent\";\n\nconst Projects = () => {\n    useEffect(() => {\n        const scrollAnimElements = document.querySelectorAll(\n          \"[data-animate-on-scroll]\"\n        );\n        const observer = new IntersectionObserver(\n          (entries) => {\n            for (const entry of entries) {\n              if (entry.isIntersecting || entry.intersectionRatio > 0) {\n                const targetElement = entry.target;\n                targetElement.classList.add(\"animate\");\n                observer.unobserve(targetElement);\n              }\n            }\n          },\n          {\n            threshold: 0.15,\n          }\n        );\n    \n        for (let i = 0; i < scrollAnimElements.length; i++) {\n          observer.observe(scrollAnimElements[i]);\n        }\n    \n        return () => {\n          for (let i = 0; i < scrollAnimElements.length; i++) {\n            observer.unobserve(scrollAnimElements[i]);\n          }\n        };\n      }, []);\n\n\n    \n    return (\n        <section\n        className=\"self-stretch bg-primary-black overflow-hidden flex flex-col items-start justify-start py-[60px] pr-[97px] pl-20 box-border max-w-full text-left text-29xl text-primary-white font-heading-h6-semibold lg:pt-[25px] lg:pb-[25px] lg:box-border mq825:py-5 mq825:pr-12 mq825:pl-10 mq825:box-border mq450:pr-5 mq450:box-border mq1425:pt-[39px] mq1425:pb-[39px] mq1425:box-border\"\n        data-scroll-to=\"project\"\n      >\n        <div className=\"self-stretch overflow-hidden flex flex-col items-start justify-start py-0 px-8 box-border gap-[20px] max-w-full\">\n          <div\n            className=\"self-stretch overflow-hidden flex flex-row items-center justify-center py-5 px-0 gap-[16px] [&.animate]:animate-[1s_ease_0s_1_normal_forwards_fade-in-top] opacity-[0] mq450:flex-wrap\"\n            data-animate-on-scroll\n          >\n            <h1 className=\"m-0 relative text-inherit tracking-[-0.02em] leading-[56px] font-normal font-inherit mq825:text-19xl mq825:leading-[45px] mq450:text-10xl mq450:leading-[34px]\">\n              My\n            </h1>\n            <h1 className=\"m-0 relative text-inherit tracking-[-0.02em] leading-[56px] font-extrabold font-inherit mq825:text-19xl mq825:leading-[45px] mq450:text-10xl mq450:leading-[34px]\">\n              Projects\n            </h1>\n          </div>\n          <ProjectComponent\n            Image=\"/umate.jpg\"\n            Number=\"01\"\n            Title=\"UMate: Bumble for Roommates\"\n            ImageLink=\"https://github.com/fabihafatima/UMateFinder\"\n            Text1=\"Developed a roommate-finding application in Python with an interactive React frontend with a recommendation algorithm to enhance user compatibility utilized MongoDB for scalable data management and AWS S3 for cloud storage\"\n            Text2=\"With UMate, users can easily create a profile, set their preferences, and find potential roommates using an interactive interface similar to dating apps and top-notch recommendation model, UMate suggests the top matches based on compatibility factors like the duration of stay, lifestyle, budget, dietary preferences, and more.\"\n          />\n          <ProjectComponent\n            Image=\"/TravelPlanner.jpeg\"\n            Number=\"02\"\n            Title=\"Travel Planner\"\n            ImageLink=\"https://github.com/fabihafatima/travel-planner\"\n            Text1=\"Developed an AI-driven travel planner using Python, React, and Java Spring Boot to curate personalized itineraries, suggest destinations based on user moods, and generate packing checklists.\"\n            Text2=\"The platform leverages Llama-3.2-3B-Instruct for AI-powered suggestion generation, enhancing automation and customization in travel planning.\"\n          />\n          <ProjectComponent\n            Image=\"/fraudSpark.png\"\n            Number=\"03\"\n            Title=\"FraudSpark: Real-Time Fraud Detection System\"\n            ImageLink=\"https://github.com/fabihafatima/FraudSpark-Real-Time-Fraud-Detection-System-\"\n            Text1=\"Built a distributed fraud detection system with Random Forest Classifier, optimized for imbalanced datasets and leveraged Kafka for real-time data streaming and PySpark for scalable processing\"\n          />\n          <ProjectComponent\n            Image=\"/llm.png\"\n            Number=\"04\"\n            Title=\"LLMs to the Rescue \"\n            ImageLink=\"https://github.com/fabihafatima/llms-to-the-rescue\"\n            Text1=\"Addressed class imbalance in text classification by leveraging Large Language Model (Llama-3.2) for data augmentation through style transfer using Python and synthetically enriched underrepresented classes\"\n          />\n          <ProjectComponent\n            Image=\"/spede.jpg\"\n            Number=\"05\"\n            Title=\"Spede: Detecting Emotions from Speech using Deep Learning\"\n            ImageLink=\"https://github.com/fabihafatima/Speech-Emotion-Detector-using-Deep-Learning\"\n            Text1=\"Spede is a Python-based application with a simple intuitive interface that utilizes machine learning and deep learning techniques to detect emotions in speech or songs from uploaded WAV files, identifying eight emotions: happy, sad, neutral, anger, disgust, calm, surprised, and fearful.\"\n            Text2=\"By implementing a fusion of CNN-Decision Tree algorithms we analyze and categorize emotional states from English speech, achieving an accuracy of 83.56%.\"\n            />\n        </div>\n      </section>\n    )};\n\n    export default Projects;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}